{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/joechou/Documents/ProjectDemo/workTrySpace/createDapp/DemoDapp/walletconnect-dapp-demo/frontend/App.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useWalletConnect, withWalletConnect } from '@walletconnect/react-native-dapp';\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport localhost from 'react-native-localhost';\nimport Web3 from 'web3';\nimport { expo } from \"../app.json\";\nimport Hello from \"../artifacts/contracts/Hello.sol/Hello.json\";\nvar styles = StyleSheet.create({\n  center: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  white: {\n    backgroundColor: 'white'\n  }\n});\n\nvar shouldDeployContract = function shouldDeployContract(web3, abi, data, from) {\n  var deployment, gas, _await$deployment$sen, contractAddress;\n\n  return _regeneratorRuntime.async(function shouldDeployContract$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          deployment = new web3.eth.Contract(abi).deploy({\n            data: data\n          });\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(deployment.estimateGas());\n\n        case 3:\n          gas = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(deployment.send({\n            from: from,\n            gas: gas\n          }));\n\n        case 6:\n          _await$deployment$sen = _context.sent;\n          contractAddress = _await$deployment$sen.options.address;\n          return _context.abrupt(\"return\", new web3.eth.Contract(abi, contractAddress));\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nfunction App() {\n  var connector = useWalletConnect();\n\n  var _React$useState = React.useState('Loading...'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      message = _React$useState2[0],\n      setMessage = _React$useState2[1];\n\n  var web3 = React.useMemo(function () {\n    return new Web3(new Web3.providers.HttpProvider(\"http://\" + localhost + \":\" + undefined));\n  }, [undefined]);\n  React.useEffect(function () {\n    (function _callee() {\n      var _await$web3$eth$accou, address, contract;\n\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.accounts.privateKeyToAccount(undefined));\n\n            case 2:\n              _await$web3$eth$accou = _context2.sent;\n              address = _await$web3$eth$accou.address;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(shouldDeployContract(web3, Hello.abi, Hello.bytecode, address));\n\n            case 6:\n              contract = _context2.sent;\n              _context2.t0 = setMessage;\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(contract.methods.sayHello('React Native').call());\n\n            case 10:\n              _context2.t1 = _context2.sent;\n              (0, _context2.t0)(_context2.t1);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, [web3, shouldDeployContract, setMessage, undefined]);\n  var connectWallet = React.useCallback(function () {\n    return connector.connect();\n  }, [connector]);\n  var signTransaction = React.useCallback(function _callee2() {\n    return _regeneratorRuntime.async(function _callee2$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(connector.signTransaction({\n              data: '0x',\n              from: '0xbc28Ea04101F03aA7a94C1379bc3AB32E65e62d3',\n              gas: '0x9c40',\n              gasPrice: '0x02540be400',\n              nonce: '0x0114',\n              to: '0x89D24A7b4cCB1b6fAA2625Fe562bDd9A23260359',\n              value: '0x00'\n            }));\n\n          case 3:\n            _context3.next = 8;\n            break;\n\n          case 5:\n            _context3.prev = 5;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(_context3.t0);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }, [connector]);\n  var killSession = React.useCallback(function () {\n    return connector.killSession();\n  }, [connector]);\n  return React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.center, styles.white],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    testID: \"tid-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, message), !connector.connected && React.createElement(TouchableOpacity, {\n    onPress: connectWallet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Connect a Wallet\")), !!connector.connected && React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n    onPress: signTransaction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Sign a Transaction\")), React.createElement(TouchableOpacity, {\n    onPress: killSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Kill Session\"))));\n}\n\nvar scheme = expo.scheme;\nexport default withWalletConnect(App, {\n  redirectUrl: Platform.OS === 'web' ? window.location.origin : scheme + \"://\",\n  storageOptions: {\n    asyncStorage: AsyncStorage\n  }\n});","map":{"version":3,"sources":["/Users/joechou/Documents/ProjectDemo/workTrySpace/createDapp/DemoDapp/walletconnect-dapp-demo/frontend/App.tsx"],"names":["AsyncStorage","useWalletConnect","withWalletConnect","React","localhost","Web3","expo","Hello","styles","StyleSheet","create","center","alignItems","justifyContent","white","backgroundColor","shouldDeployContract","web3","abi","data","from","deployment","eth","Contract","deploy","estimateGas","gas","send","contractAddress","options","address","App","connector","useState","message","setMessage","useMemo","providers","HttpProvider","useEffect","accounts","privateKeyToAccount","bytecode","contract","methods","sayHello","call","connectWallet","useCallback","connect","signTransaction","gasPrice","nonce","to","value","console","error","killSession","absoluteFill","connected","scheme","redirectUrl","Platform","OS","window","location","origin","storageOptions","asyncStorage"],"mappings":"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","sourcesContent":["import { HARDHAT_PORT, HARDHAT_PRIVATE_KEY } from '@env';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useWalletConnect, withWalletConnect } from '@walletconnect/react-native-dapp';\nimport React from 'react';\nimport { Platform, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport localhost from 'react-native-localhost';\nimport Web3 from 'web3';\n\nimport { expo } from '../app.json';\nimport Hello from '../artifacts/contracts/Hello.sol/Hello.json';\n\nconst styles = StyleSheet.create({\n  center: { alignItems: 'center', justifyContent: 'center' },\n  // eslint-disable-next-line react-native/no-color-literals\n  white: { backgroundColor: 'white' },\n});\n\nconst shouldDeployContract = async (web3, abi, data, from: string) => {\n  const deployment = new web3.eth.Contract(abi).deploy({ data });\n  const gas = await deployment.estimateGas();\n  const {\n    options: { address: contractAddress },\n  } = await deployment.send({ from, gas });\n  return new web3.eth.Contract(abi, contractAddress);\n};\n\nfunction App(): JSX.Element {\n  const connector = useWalletConnect();\n  const [message, setMessage] = React.useState<string>('Loading...');\n  const web3 = React.useMemo(\n    () => new Web3(new Web3.providers.HttpProvider(`http://${localhost}:${HARDHAT_PORT}`)),\n    [HARDHAT_PORT]\n  );\n  React.useEffect(() => {\n    (async () => {\n      const { address } = await web3.eth.accounts.privateKeyToAccount(HARDHAT_PRIVATE_KEY);\n      const contract = await shouldDeployContract(\n        web3,\n        Hello.abi,\n        Hello.bytecode,\n        address\n      );\n      setMessage(await contract.methods.sayHello('React Native').call());\n    })();\n  }, [web3, shouldDeployContract, setMessage, HARDHAT_PRIVATE_KEY]);\n  const connectWallet = React.useCallback(() => {\n    return connector.connect();\n  }, [connector]);\n  const signTransaction = React.useCallback(async () => {\n    try {\n       await connector.signTransaction({\n        data: '0x',\n        from: '0xbc28Ea04101F03aA7a94C1379bc3AB32E65e62d3',\n        gas: '0x9c40',\n        gasPrice: '0x02540be400',\n        nonce: '0x0114',\n        to: '0x89D24A7b4cCB1b6fAA2625Fe562bDd9A23260359',\n        value: '0x00',\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [connector]);\n  const killSession = React.useCallback(() => {\n    return connector.killSession();\n  }, [connector]);\n  return (\n    <View style={[StyleSheet.absoluteFill, styles.center, styles.white]}>\n      <Text testID=\"tid-message\">{message}</Text>\n      {!connector.connected && (\n        <TouchableOpacity onPress={connectWallet}>\n          <Text>Connect a Wallet</Text>\n        </TouchableOpacity>\n      )}\n      {!!connector.connected && (\n        <>\n          <TouchableOpacity onPress={signTransaction}>\n            <Text>Sign a Transaction</Text>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={killSession}>\n            <Text>Kill Session</Text>\n          </TouchableOpacity>\n        </>\n      )}\n    </View>\n  );\n}\n\nconst { scheme } = expo;\n\nexport default withWalletConnect(App, {\n  redirectUrl: Platform.OS === 'web' ? window.location.origin : `${scheme}://`,\n  storageOptions: {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    asyncStorage: AsyncStorage,\n  },\n});"]},"metadata":{},"sourceType":"module"}